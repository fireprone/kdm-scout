{"version":3,"sources":["img lazy /^/.//.*$/ groupOptions: {} namespace object","CardProvider.js","components/LoadoutCard/LoadoutCard.js","components/LoadoutGrid/LoadoutGrid.js","components/TermsList/TermsList.js","components/Overlay/Overlay.js","components/Nav/Nav.js","components/ContextMenu/ContextMenu.js","App.js","serverWorkerRegistration.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","CardProvider","getCard","cardName","a","cardObj","cardInfo","hasOwnProperty","cardImageName","replace","toLowerCase","cardImageFile","image","default","LoadoutCard","props","useState","origin","setCardInfo","useEffect","name","card","onClick","clickListener","src","className","class","alt","LoadoutGrid","number","TermsList","terms","isShown","style","activeTerm","setActiveTerm","setTimeout","div","glossaryTerms","term","Overlay","focusedCard","setIsShown","isFlipped","setIsFlipped","trail","useTrail","config","mass","tension","friction","opacity","transform","from","gentle","length","Nav","ContextMenu","App","setFocusedCard","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","Swappable","draggable","distance","mirror","constrainDimensions","URL","process","href","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.664e306f.chunk.js","sourcesContent":["var map = {\n\t\"./cloth.png\": [\n\t\t84,\n\t\t3\n\t],\n\t\"./founding-stone.png\": [\n\t\t85,\n\t\t4\n\t],\n\t\"./skinnery.png\": [\n\t\t86,\n\t\t5\n\t],\n\t\"./starting-gear.png\": [\n\t\t87,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 56;\nmodule.exports = webpackAsyncContext;","import cardInfo from './cardInfo.json';\n\nconst CardProvider = (() => {\n  const getCard = async (cardName) => {\n    let cardObj = {};\n    if (cardInfo.hasOwnProperty(cardName)) {\n      cardObj = cardInfo[cardName];\n    }\n\n    if (cardName !== '') {\n      const cardImageName = `${cardName.replace(/ /g, '-').toLowerCase()}.png`;\n      const cardImageFile = await import(`./img/${cardImageName}`);\n      cardObj.image = cardImageFile.default;\n    } else {\n      cardObj.image = '';\n    }\n\n    return cardObj;\n  };\n\n  return { getCard };\n})();\n\nexport default CardProvider;\n","import './LoadoutCard.css';\nimport { useEffect, useState } from 'react';\nimport CardProvider from '../../CardProvider';\n\nconst LoadoutCard = (props) => {\n  const [cardInfo, setCardInfo] = useState({ image: '', origin: '' });\n\n  useEffect(\n    () =>\n      (async function loadCardData() {\n        const card = await CardProvider.getCard(props.name);\n        setCardInfo(card);\n      })(),\n    [props.name]\n  );\n\n  return (\n    <>\n      {!cardInfo.image ? (\n        <div className='card' />\n      ) : (\n        <img\n          onClick={() =>\n            props.clickListener\n              ? props.clickListener({ name: props.name, ...cardInfo })\n              : true\n          }\n          src={cardInfo.image}\n          className={`card ${props.class ? props.class : ''}`}\n          alt={`${props.name} Card`}\n        />\n      )}\n    </>\n  );\n};\n\nexport default LoadoutCard;\n","import './LoadoutGrid.css';\nimport LoadoutCard from '../LoadoutCard/LoadoutCard';\n\nconst LoadoutGrid = ({ clickListener }) => {\n  const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  return (\n    <>\n      <div id='loadout-grid'>\n        {numbers.map((number) => (\n          <div key={`space-${number}`} className='loadout-space'>\n            {number === 5 ? (\n              <LoadoutCard name={'Cloth'} clickListener={clickListener} />\n            ) : number === 6 ? (\n              <LoadoutCard\n                name={'Founding Stone'}\n                clickListener={clickListener}\n              />\n            ) : (\n              <div className='card' />\n            )}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default LoadoutGrid;\n","import './TermsList.css';\nimport { useState, useEffect } from 'react';\nimport glossaryTerms from '../../glossaryTerms';\nimport { MdKeyboardArrowUp } from 'react-icons/md';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport { animated } from 'react-spring';\n\nconst TermsList = ({ terms, isShown, style }) => {\n  const [activeTerm, setActiveTerm] = useState('');\n\n  useEffect(() => {\n    setTimeout(() => setActiveTerm(''), 500);\n  }, [isShown]);\n\n  return (\n    <animated.div className='TermsList' style={style}>\n      {activeTerm && (\n        <div id='term-definition' className={activeTerm ? '' : 'hidden'}>\n          <h2>{activeTerm}</h2>\n          <hr />\n          <p>{glossaryTerms[activeTerm]}</p>\n          <div id='return' onClick={() => setActiveTerm('')}>\n            <MdKeyboardArrowUp />\n          </div>\n        </div>\n      )}\n      <ul>\n        {terms.map((term) => (\n          <li key={term.replace(/ /g, '-')} onClick={() => setActiveTerm(term)}>\n            <div className='term'>\n              {term}\n              <LibraryBooksIcon />\n            </div>\n          </li>\n        ))}\n      </ul>\n    </animated.div>\n  );\n};\n\nexport default TermsList;\n","import './Overlay.css';\nimport { useState, useEffect } from 'react';\nimport LoadoutCard from '../LoadoutCard/LoadoutCard';\nimport TermsList from '../TermsList/TermsList';\nimport { useTrail, animated, config } from 'react-spring';\n\nconst Overlay = ({ focusedCard }) => {\n  const [isShown, setIsShown] = useState(false);\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  useEffect(() => {\n    if (focusedCard.name) {\n      setIsShown(true);\n    }\n  }, [focusedCard]);\n\n  const trail = useTrail(2, {\n    config: { mass: 5, tension: 2000, friction: 200 },\n    opacity: isShown ? 1 : 0,\n    transform: isShown ? 'translateY(5vmin)' : 'translateY(0vmin)',\n    from: { opacity: 0, transform: 'translateY(0vmin)' },\n    config: config.gentle,\n  });\n\n  return (\n    <div id='Overlay' className={isShown ? '' : 'hidden'}>\n      <animated.div id='card-preview' style={trail[0]}>\n        <div\n          id='flip-card'\n          className={isFlipped ? 'is-flipped' : ''}\n          onClick={() => setIsFlipped(!isFlipped)}\n        >\n          <LoadoutCard name={focusedCard.name} class='card-front' />\n          <LoadoutCard name={focusedCard.origin} class='card-back' />\n        </div>\n        {focusedCard.terms && focusedCard.terms.length ? (\n          <TermsList\n            terms={focusedCard.terms}\n            isShown={isShown}\n            style={trail[1]}\n          />\n        ) : (\n          ''\n        )}\n      </animated.div>\n      <div\n        id='overlay-bg'\n        onClick={() => {\n          setIsShown(false);\n          setIsFlipped(false);\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Overlay;\n","import './Nav.css';\n\nconst Nav = () => {\n  return (\n    <nav className='Nav'>\n      <ul>\n        <li>Grid</li>\n        <li>Dice</li>\n        <li>Stats</li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import './ContextMenu.css';\nimport QueueIcon from '@material-ui/icons/Queue';\n\nconst ContextMenu = () => {\n  return (\n    <div className='ContextMenu'>\n      <QueueIcon />\n    </div>\n  );\n};\n\nexport default ContextMenu;\n","import './App.css';\nimport { useState } from 'react';\nimport LoadoutGrid from './components/LoadoutGrid/LoadoutGrid';\nimport Overlay from './components/Overlay/Overlay';\nimport Nav from './components/Nav/Nav';\nimport ContextMenu from './components/ContextMenu/ContextMenu';\n\nfunction App() {\n  const [focusedCard, setFocusedCard] = useState({ name: '', origin: '' });\n\n  return (\n    <div className='App'>\n      <Overlay focusedCard={focusedCard} setFocusedCard={setFocusedCard} />\n      <div id='section-grid'>\n        <section id='context-section'>\n          <ContextMenu />\n        </section>\n        <section id='loadout-section'>\n          <LoadoutGrid clickListener={setFocusedCard} />\n        </section>\n        <section id='nav-section'>\n          <Nav />\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Swappable } from '@shopify/draggable';\nimport * as serviceWorkerRegistration from './serverWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// eslint-disable-next-line\nconst draggable = new Swappable(document.getElementById('loadout-grid'), {\n  draggable: '.card',\n  distance: 10,\n  mirror: {\n    constrainDimensions: true,\n  },\n});\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}