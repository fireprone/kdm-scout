{"version":3,"sources":["img lazy /^/.//.*$/ groupOptions: {} namespace object","CardProvider.js","components/LoadoutCard/LoadoutCard.js","components/LoadoutGrid/LoadoutGrid.js","components/TermsList/TermsList.js","components/Overlay/Overlay.js","App.js","serverWorkerRegistration.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","CardProvider","getCard","cardName","a","cardObj","cardInfo","hasOwnProperty","cardImageName","replace","toLowerCase","cardImageFile","image","default","LoadoutCard","props","useState","origin","setCardInfo","useEffect","name","card","onClick","clickListener","src","className","class","alt","LoadoutGrid","number","TermsList","terms","isHidden","activeTerm","setActiveTerm","setTimeout","glossaryTerms","term","Overlay","focusedCard","setIsHidden","isFlipped","setIsFlipped","length","App","setFocusedCard","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","Swappable","draggable","distance","mirror","constrainDimensions","URL","process","href","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7d043895.chunk.js","sourcesContent":["var map = {\n\t\"./cloth.png\": [\n\t\t59,\n\t\t3\n\t],\n\t\"./founding-stone.png\": [\n\t\t60,\n\t\t4\n\t],\n\t\"./starting-gear.png\": [\n\t\t61,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 30;\nmodule.exports = webpackAsyncContext;","import cardInfo from './cardInfo.json';\n\nconst CardProvider = (() => {\n  const getCard = async (cardName) => {\n    let cardObj = {};\n    if (cardInfo.hasOwnProperty(cardName)) {\n      cardObj = cardInfo[cardName];\n    }\n\n    if (cardName !== '') {\n      const cardImageName = `${cardName.replace(/ /g, '-').toLowerCase()}.png`;\n      const cardImageFile = await import(`./img/${cardImageName}`);\n      cardObj.image = cardImageFile.default;\n    } else {\n      cardObj.image = '';\n    }\n\n    return cardObj;\n  };\n\n  return { getCard };\n})();\n\nexport default CardProvider;\n","import './LoadoutCard.css';\nimport { useEffect, useState } from 'react';\nimport CardProvider from '../../CardProvider';\n\nconst LoadoutCard = (props) => {\n  const [cardInfo, setCardInfo] = useState({ image: '', origin: '' });\n\n  useEffect(\n    () =>\n      (async function loadCardData() {\n        const card = await CardProvider.getCard(props.name);\n        setCardInfo(card);\n      })(),\n    [props.name]\n  );\n\n  return (\n    <>\n      {!cardInfo.image ? (\n        <div className='loading card' />\n      ) : (\n        <img\n          onClick={() =>\n            props.clickListener\n              ? props.clickListener({ name: props.name, ...cardInfo })\n              : true\n          }\n          src={cardInfo.image}\n          className={`card ${props.class ? props.class : ''}`}\n          alt={`${props.name} Card`}\n        />\n      )}\n    </>\n  );\n};\n\nexport default LoadoutCard;\n","import './LoadoutGrid.css';\nimport LoadoutCard from '../LoadoutCard/LoadoutCard';\n\nconst LoadoutGrid = ({ clickListener }) => {\n  const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  return (\n    <>\n      <div id='loadout-grid'>\n        {numbers.map((number) => (\n          <div key={`space-${number}`} className='loadout-space'>\n            {number === 5 ? (\n              <LoadoutCard name={'Cloth'} clickListener={clickListener} />\n            ) : number === 6 ? (\n              <LoadoutCard\n                name={'Founding Stone'}\n                clickListener={clickListener}\n              />\n            ) : (\n              <div className='card' />\n            )}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default LoadoutGrid;\n","import './TermsList.css';\nimport { useState, useEffect } from 'react';\nimport glossaryTerms from '../../glossaryTerms';\nimport { MdKeyboardArrowUp } from 'react-icons/md';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\n\nconst TermsList = ({ terms, isHidden }) => {\n  const [activeTerm, setActiveTerm] = useState('');\n\n  useEffect(() => {\n    setTimeout(() => setActiveTerm(''), 500);\n  }, [isHidden]);\n\n  return (\n    <div className='TermsList'>\n      <div id='term-definition' className={activeTerm ? '' : 'hidden'}>\n        <h2>{activeTerm}</h2>\n        <hr />\n        <p>{glossaryTerms[activeTerm]}</p>\n        <div id='return' onClick={() => setActiveTerm('')}>\n          <MdKeyboardArrowUp />\n        </div>\n      </div>\n      <ul>\n        {terms.map((term) => (\n          <li key={term.replace(/ /g, '-')} onClick={() => setActiveTerm(term)}>\n            <div className='term'>\n              {term}\n              <LibraryBooksIcon />\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TermsList;\n","import './Overlay.css';\nimport { useState, useEffect } from 'react';\nimport LoadoutCard from '../LoadoutCard/LoadoutCard';\nimport TermsList from '../TermsList/TermsList';\n\nconst Overlay = ({ focusedCard }) => {\n  const [isHidden, setIsHidden] = useState(true);\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  useEffect(() => {\n    if (focusedCard.name) {\n      setIsHidden(false);\n    }\n  }, [focusedCard]);\n\n  return (\n    <div id='Overlay' className={isHidden ? 'hidden' : ''}>\n      <div id='overlay-content'>\n        <div id='card-preview'>\n          <div\n            id='flip-card'\n            className={isFlipped ? 'is-flipped' : ''}\n            onClick={() => setIsFlipped(!isFlipped)}\n          >\n            <LoadoutCard name={focusedCard.name} class='card-front' />\n            <LoadoutCard name={focusedCard.origin} class='card-back' />\n          </div>\n        </div>\n        {focusedCard.terms && focusedCard.terms.length ? (\n          <TermsList terms={focusedCard.terms} isHidden={isHidden} />\n        ) : (\n          ''\n        )}\n      </div>\n      <div\n        id='overlay-bg'\n        onClick={() => {\n          setIsHidden(true);\n          setIsFlipped(false);\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Overlay;\n","import './App.css';\nimport { useState } from 'react';\nimport LoadoutGrid from './components/LoadoutGrid/LoadoutGrid';\nimport Overlay from './components/Overlay/Overlay';\n\nfunction App() {\n  const [focusedCard, setFocusedCard] = useState({ name: '', origin: '' });\n\n  return (\n    <div className='App'>\n      <Overlay focusedCard={focusedCard} />\n      <div id='loadout-section'>\n        <LoadoutGrid clickListener={setFocusedCard} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Swappable } from '@shopify/draggable';\nimport * as serviceWorkerRegistration from './serverWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// eslint-disable-next-line\nconst draggable = new Swappable(document.getElementById('loadout-grid'), {\n  draggable: '.card',\n  distance: 10,\n  mirror: {\n    constrainDimensions: true,\n  },\n});\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}